#version  330 core

layout(location=0) in vec3 pos;
layout(location=1) in vec3 inNormal;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 lightSpaceMatrix;

out vec3 normalPos;
out vec3 worldSpacePos;
out vec4 lightSpacePos;

void main() {
    gl_Position = projection * view * model * vec4(pos, 1);
    normalPos = mat3(transpose(inverse(model))) * inNormal;
    worldSpacePos = vec3(model * vec4(pos,1));
    lightSpacePos = lightSpaceMatrix * vec4(worldSpacePos,1.0);
}